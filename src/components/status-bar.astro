---
import { summaryPayload, type Monitor } from "../utils/models";
import { Bar } from './bar';

interface Props extends Monitor {}

const { name, id,  description } = Astro.props;
const env = Astro.locals.runtime.env;

const response = await fetch(`https://api.openstatus.dev/v1/monitor/${id}/summary`, {
  headers: {
    "x-openstatus-key": env.API_KEY,
    'Cache-Control': 'max-age=600', // Cache for 10 minutes
  },
});

const data = await response.json();
const result = summaryPayload.parse(data);
---

<div class="flex flex-col gap-2 justify-between text-sm">
  <div class="flex items-start gap-1 flex-col">
    <div class="text-gray-900 line-clamp-1 font-semibold">{name}</div>
    {description && <div class="text-gray-600 shrink-0 font-light">{description}</div>}
  </div>
  <div>
    <div class="flex flex-row gap-0.5">
      {
        result.data.reverse().map((stat) => {
          return <Bar {...stat} client:visible />
        })
      }
    </div>
    <div class="flex items-center justify-between text-xs text-gray-600">
      <p>{/* TODO: 45 days before */}</p>
      <p>today</p>
    </div>
  </div>
</div>